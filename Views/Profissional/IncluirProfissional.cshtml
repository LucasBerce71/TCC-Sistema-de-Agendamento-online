@model TccNovoGrupo.Models.Profissionals

@{ 
    ViewBag.Title = "Cadastrar novo profissional";
}

<title>@ViewBag.Title</title>
<link rel="shortcut icon" href="~/Imagens/icon.png" />
<link href="~/CSS/estiloGeral.css" rel="stylesheet" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/CSS/MenuHamburguer.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.mask177.min.js"></script>
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">

<style>
    hr {
        border: 1px solid #fff;
        height: 2px;
        background-color: #fff;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <center>
        <div class="form container">
            <h2 style="color: #fff; text-decoration: underline;">Cadastrar Profissional</h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                <label>Nome:</label> <br />
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Profissional, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Profissional, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label>CPF:</label><br />
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control cpf" } })
                    @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label>Data de Admissão</label><br />
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DataAdmissao, new { htmlAttributes = new { @class = "form-control dta" } })
                    @Html.ValidationMessageFor(model => model.DataAdmissao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label>Data de Nascimento:</label><br />
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control dtn" } })
                    @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label>Salário:</label><br />
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Salario, new { htmlAttributes = new { @class = "form-control sal" } })
                    @Html.ValidationMessageFor(model => model.Salario, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-outline-success">Salvar <i class="far fa-save"></i></button>
                    <button class="btn btn-outline-danger">
                        @Html.ActionLink("Cancelar", "ObterProfissional", new { @style = "text-decoration:none"}) <i class="far fa-window-close"></i>
                    </button>
                </div>
            </div>
        </div>
    </center>

    <script>
        $(".cpf").mask("000.000.000-00");
        $(".dta").mask("00/00/0000");
        $(".dtn").mask("00/00/0000");
        $(".sal").mask("000.000.000,00", { reverse: true });
    </script>


}

    <style>
        a{
            text-decoration: none;
            color: red;
        }

        a:hover{
            text-decoration: none;
            color: #fff;
        }
    </style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
